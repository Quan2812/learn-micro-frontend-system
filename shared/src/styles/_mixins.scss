// Flexbox mixins
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

@mixin flex-wrap {
  display: flex;
  flex-wrap: wrap;
}

// Grid mixins
@mixin grid($columns: 1fr, $gap: $spacing-md) {
  display: grid;
  grid-template-columns: $columns;
  gap: $gap;
}

@mixin grid-auto-fit($min-width: 250px, $gap: $spacing-md) {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax($min-width, 1fr));
  gap: $gap;
}

@mixin grid-auto-fill($min-width: 250px, $gap: $spacing-md) {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax($min-width, 1fr));
  gap: $gap;
}

// Typography mixins
@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin text-clamp($lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

@mixin font-size($size, $line-height: null) {
  font-size: $size;
  @if $line-height {
    line-height: $line-height;
  }
}

// Button mixins
@mixin button-base {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: $button-padding-y $button-padding-x;
  border: 1px solid transparent;
  border-radius: $button-border-radius;
  font-weight: $button-font-weight;
  text-decoration: none;
  cursor: pointer;
  transition: all $transition-normal;
  user-select: none;
  
  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
  }
}

@mixin button-variant($bg-color, $text-color: $white, $hover-bg: null, $hover-text: null) {
  background-color: $bg-color;
  color: $text-color;
  border-color: $bg-color;
  
  &:hover:not(:disabled) {
    background-color: $hover-bg or darken($bg-color, 10%);
    color: $hover-text or $text-color;
    border-color: $hover-bg or darken($bg-color, 10%);
  }
  
  &:focus {
    box-shadow: 0 0 0 2px rgba($bg-color, 0.2);
  }
}

@mixin button-outline($color) {
  background-color: transparent;
  color: $color;
  border-color: $color;
  
  &:hover:not(:disabled) {
    background-color: $color;
    color: $white;
  }
  
  &:focus {
    box-shadow: 0 0 0 2px rgba($color, 0.2);
  }
}

// Form mixins
@mixin form-control {
  display: block;
  width: 100%;
  padding: $input-padding-y $input-padding-x;
  font-size: $font-size-base;
  line-height: $line-height-normal;
  color: $text-primary;
  background-color: $white;
  border: $input-border-width solid $input-border-color;
  border-radius: $input-border-radius;
  transition: border-color $transition-normal, box-shadow $transition-normal;
  
  &:focus {
    outline: none;
    border-color: $input-focus-border-color;
    box-shadow: $input-focus-shadow;
  }
  
  &:disabled {
    background-color: $gray-100;
    opacity: 0.6;
    cursor: not-allowed;
  }
  
  &.error {
    border-color: $error-color;
    
    &:focus {
      box-shadow: 0 0 0 2px rgba($error-color, 0.2);
    }
  }
}

// Card mixins
@mixin card {
  background-color: $card-background;
  border: $card-border;
  border-radius: $card-border-radius;
  box-shadow: $card-shadow;
  padding: $card-padding;
}

@mixin card-hover {
  transition: transform $transition-normal, box-shadow $transition-normal;
  
  &:hover {
    transform: translateY(-2px);
    box-shadow: $shadow-lg;
  }
}

// Shadow mixins
@mixin shadow($level: 'md') {
  @if $level == 'sm' {
    box-shadow: $shadow-sm;
  } @else if $level == 'md' {
    box-shadow: $shadow-md;
  } @else if $level == 'lg' {
    box-shadow: $shadow-lg;
  } @else if $level == 'xl' {
    box-shadow: $shadow-xl;
  } @else if $level == '2xl' {
    box-shadow: $shadow-2xl;
  }
}

// Responsive mixins
@mixin media-up($breakpoint) {
  @if $breakpoint == 'sm' {
    @media (min-width: $breakpoint-sm) { @content; }
  } @else if $breakpoint == 'md' {
    @media (min-width: $breakpoint-md) { @content; }
  } @else if $breakpoint == 'lg' {
    @media (min-width: $breakpoint-lg) { @content; }
  } @else if $breakpoint == 'xl' {
    @media (min-width: $breakpoint-xl) { @content; }
  }
}

@mixin media-down($breakpoint) {
  @if $breakpoint == 'sm' {
    @media (max-width: #{ $breakpoint-sm - 1px }) { @content; }
  } @else if $breakpoint == 'md' {
    @media (max-width: #{ $breakpoint-md - 1px }) { @content; }
  } @else if $breakpoint == 'lg' {
    @media (max-width: #{ $breakpoint-lg - 1px }) { @content; }
  } @else if $breakpoint == 'xl' {
    @media (max-width: #{ $breakpoint-xl - 1px }) { @content; }
  }
}

@mixin media-between($lower, $upper) {
  @media (min-width: #{$lower}) and (max-width: #{ $upper - 1px }) {
    @content;
  }
}


// Position mixins
@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin absolute-fill {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

@mixin fixed-fill {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

// Animation mixins
@mixin fade-in($duration: $transition-normal) {
  animation: fadeIn $duration ease-in-out;
}

@mixin slide-in-up($duration: $transition-normal) {
  animation: slideInUp $duration ease-out;
}

@mixin slide-in-down($duration: $transition-normal) {
  animation: slideInDown $duration ease-out;
}

@mixin bounce-in($duration: 0.6s) {
  animation: bounceIn $duration ease-out;
}

// Utility mixins
@mixin clearfix {
  &::after {
    content: '';
    display: table;
    clear: both;
  }
}

@mixin visually-hidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  padding: 0 !important;
  margin: -1px !important;
  overflow: hidden !important;
  clip: rect(0, 0, 0, 0) !important;
  white-space: nowrap !important;
  border: 0 !important;
}

@mixin reset-list {
  list-style: none;
  padding: 0;
  margin: 0;
}

@mixin reset-button {
  background: none;
  border: none;
  padding: 0;
  margin: 0;
  cursor: pointer;
  font: inherit;
  color: inherit;
}

// Loading spinner mixin
@mixin spinner($size: 2rem, $color: $primary-color, $thickness: 2px) {
  width: $size;
  height: $size;
  border: $thickness solid rgba($color, 0.2);
  border-top: $thickness solid $color;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

// Keyframes
@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes slideInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideInDown {
  from {
    opacity: 0;
    transform: translateY(-20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes bounceIn {
  0% {
    opacity: 0;
    transform: scale(0.3);
  }
  50% {
    opacity: 1;
    transform: scale(1.05);
  }
  70% {
    transform: scale(0.9);
  }
  100% {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}
